# 1 Напишите декоратор, который печатает перед и после вызова функции слова “Before” and “After”
def my_decorator(func):
    def wrapper():
        print("Before")
        func()
        print("After")

    return wrapper


@my_decorator
def my_precious():
    print("Вуаля! Декоратор!")

my_precious()

# 2 Напишите функцию декоратор, которая добавляет 1 к заданному числу


# 3 Напишите функцию декоратор, которая переводит полученный текст в верхний регистр


# 4 Напишите декоратор func_name, который выводит на экран имя функции (func.__name__)


# 5 Напишите декоратор change, который делает так, что задекорированная функция принимает все свои не именованные аргументы в порядке, обратном тому, в котором их передали


# 6 Напишите декоратор, который вычисляет время работы декорируемой функции (timer)


# 7 Напишите функцию, которая вычисляет значение числа Фибоначчи для заданного количество элементов последовательности и возвращает его и оберните ее декоратором timer и func_name


# 8 Напишите функцию, которая вычисляет сложное математическое выражение и оберните ее декоратором из пункта 1, 2
